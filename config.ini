[meshtastic]
plugin_enable = True
# use tcp or serial
interface = tcp
# Your lora meshtastic IP
host = 192.168.0.2
# Your lora meshtastic comport
serial_port = COM1
# After how many minutes mark a node as old
map_delete_time = 60
# After how many minutes delete nodes (10080 = 7 days)
map_oldnode_time = 10080
# Map Trail Age in hours (The red trail when moving)
map_trail_age = 12
# Metrics age in days (Battery, voltage etc)
metrics_age = 5
# Number of lines to show in the two left windows (higher number = more memory usage) with 1000 and not to crazy zooming around stays around 300mb
max_lines = 1000
# Add a dark mmode like filter to the map tiles if set to True (might not work with all tile servers maps)
color_filter = True
# Local cache for map tiles (This can be a lot of data, dont go zoom the whole world at max zoom) also might fail to save at times if to many requests are made
map_cache = False
# Map Tile Server used
map_tileserver =  https://c.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png
# Example for tiles be
# CARTO.com Dark    > https://basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png
# CARTO.com Light   > https://basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png 
# CARTO.com voyager > https://basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png
# CARTO.com           https://basemaps.cartocdn.com/spotify_dark/{z}/{x}/{y}.png
# OpenStreetMap     > https://tile.openstreetmap.org/{z}/{x}/{y}.png
# OpenStreetMao Soft> https://tile-a.openstreetmap.fr/hot/{z}/{x}/{y}.png
# google normal     > https://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}&s=Ga
# google satellite  > https://mt0.google.com/vt/lyrs=s&hl=en&x={x}&y={y}&z={z}&s=Ga

# Font used in the terminal window and info panels, default is Fixedsys; but for 2k and 4k screens you might want to use InputMono
# but this font is not by default installed see https://input.djr.com/download/ for the free version
font = InputMono

# Send weather stats to mesh using data from json file example content :
# {"tempc": 20.5, "humidity": 50, "baromabshpa": 1013.25}
# Only use this if your lora module does not send environment metrics
weatherbeacon = False
weatherjson = http://127.0.0.1/data/report/raw.json

[APRS]
# Enable APRS Plugin
aprs_plugin = False
# Station callsign
callsign = NOCALL
# APRS-is pass code
passcode = -1
# APRS server
server = euro.aprs2.net
# APRS server port
port = 14580
# APRS server Beacon
beacon = Meshtastic Lora APRS iGATE MUSi 868Mhz Long Fast
# APRS filter range from Lora Lat/Lon in KM (usualy 2x range of your lora module) 
filter_range = 26
